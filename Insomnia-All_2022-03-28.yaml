_type: export
__export_format: 4
__export_date: 2022-03-28T17:29:34.985Z
__export_source: insomnia.desktop.app:v2022.2.0
resources:
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df01ebf79d7e
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824015
    created: 1636428824015
    url: "{{ base_url }}/api/user"
    name: /api/user
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "username": "ali",
          "email": "ali@example.com"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1636428824015
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_a4b59c8e2f7349e5bed461a1a673df01
    parentId: null
    modified: 1636428824051
    created: 1636428824051
    name: Example Open API Documentation 1.0.0
    description: >
      Documentation example. You can add various kinds of **documentation**
      here. It takes both markdown and HTML.

      <h2>ER Diagram</h2>

      <h2> Error Codes </h2>  <table>
        <thead>
          <th>Resource</th>
          <th>Error Code</th>
          <th>Message</th>
        </thead>
        <tbody>
        <tr>
          <td>Resource</td>
          <td>Error Code</td>
          <td>Message</td>
        </tr>
        </tbody>
      </table>
    scope: design
    _type: workspace
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df017f724ae1
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824020
    created: 1636428824020
    url: "{{ base_url }}/api/user"
    name: /api/user
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1636428824020
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df01c61aa0d5
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824026
    created: 1636428824026
    url: "{{ base_url }}/api/user/{{ username }}"
    name: /api/user/{username}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1636428824026
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df0134f6f492
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824032
    created: 1636428824032
    url: "{{ base_url }}/api/user/{{ username }}"
    name: /api/user/{username}
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "email": "ali@example2.org"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1636428824032
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df016227f0e7
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824034
    created: 1636428824034
    url: "{{ base_url }}/api/user/{{ username }}"
    name: /api/user/{username}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1636428824034
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_a4b59c8e2f7349e5bed461a1a673df0152e66d1b
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824038
    created: 1636428824038
    url: "{{ base_url }}/api/user/{{ username }}"
    name: /api/user/{username}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1636428824038
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e0508ca04
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678242
    created: 1648006678242
    url: "{{ base_url }}/api/student/{{ student_id }}/course/{{ course_id }}"
    name: /api/student/{student_id}/course/{course_id}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678242
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_e51a6b4e165c4342aa083be39375598e
    parentId: null
    modified: 1636546623556
    created: 1636546623556
    name: Week_6lab.yaml
    description: ""
    scope: design
    _type: workspace
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e385c973f
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678274
    created: 1648006678274
    url: "{{ base_url }}/api/student/{{ student_id }}/course/{{ course_id }}"
    name: /api/student/{student_id}/course/{course_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678274
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e949d6a77
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678284
    created: 1648006678284
    url: "{{ base_url }}/api/student/{{ student_id }}/course"
    name: /api/student/{student_id}/course
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "course_id": 12345
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1648006678284
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ee2d16114
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678288
    created: 1648006678288
    url: "{{ base_url }}/api/student/{{ student_id }}/course"
    name: /api/student/{student_id}/course
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678288
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ecf97b068
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678291
    created: 1648006678291
    url: "{{ base_url }}/api/student/{{ student_id }}/course"
    name: /api/student/{student_id}/course
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678291
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e54310e51
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678295
    created: 1648006678295
    url: "{{ base_url }}/api/student"
    name: /api/student
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "first_name": "Narendra",
          "last_name": "Mishra",
          "roll_number": "MA19M010"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1648006678295
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e1d611e54
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678298
    created: 1648006678298
    url: "{{ base_url }}/api/student"
    name: /api/student
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678298
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e68f52712
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678301
    created: 1648006678301
    url: "{{ base_url }}/api/student/{{ student_id }}"
    name: /api/student/{student_id}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678301
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ee2cfe2b9
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678304
    created: 1648006678304
    url: "{{ base_url }}/api/student/{{ student_id }}"
    name: /api/student/{student_id}
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "first_name": "Narendra",
          "last_name": "Mishra",
          "roll_number": "MA19M010"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1648006678304
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ee191caf9
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678307
    created: 1648006678307
    url: "{{ base_url }}/api/student/{{ student_id }}"
    name: /api/student/{student_id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678307
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e26640e9e
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678311
    created: 1648006678311
    url: "{{ base_url }}/api/student/{{ student_id }}"
    name: /api/student/{student_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678311
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ed8a71518
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678314
    created: 1648006678314
    url: "{{ base_url }}/api/course"
    name: /api/course
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "course_name": "Maths1",
          "course_code": "MA101",
          "course_description": "Course Description Example"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1648006678314
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598edbe8c226
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678318
    created: 1648006678318
    url: "{{ base_url }}/api/course"
    name: /api/course
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678318
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598e46de9ca0
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678321
    created: 1648006678321
    url: "{{ base_url }}/api/course/{{ course_id }}"
    name: /api/course/{course_id}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678321
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ed99984d0
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678323
    created: 1648006678323
    url: "{{ base_url }}/api/course/{{ course_id }}"
    name: /api/course/{course_id}
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "course_name": "Maths1",
          "course_code": "MA101",
          "course_description": "Course Description Example"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1648006678323
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ed7f37c74
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678324
    created: 1648006678324
    url: "{{ base_url }}/api/course/{{ course_id }}"
    name: /api/course/{course_id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678324
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_e51a6b4e165c4342aa083be39375598ef912de14
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648006678326
    created: 1648006678326
    url: "{{ base_url }}/api/course/{{ course_id }}"
    name: /api/course/{course_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1648006678326
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_105012b1df36837a22c6dc51616df3cca961267a
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428824047
    created: 1636428824042
    name: Base environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1636428824042
    _type: environment
  - _id: jar_105012b1df36837a22c6dc51616df3cca961267a
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636428831914
    created: 1636428831914
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_4cb2d0ae43884af694bc5c1f5ddaaeca
    parentId: wrk_a4b59c8e2f7349e5bed461a1a673df01
    modified: 1636546566386
    created: 1636428824052
    fileName: Example Open API Documentation 1.0.0
    contents: >-
      openapi: 3.0.0

      info:
        title: Example Open API Documentation
        version: 1.0.0
        description: |
          Documentation example. You can add various kinds of **documentation** here. It takes both markdown and HTML.
          <h2>ER Diagram</h2>
          <h2> Error Codes </h2>  <table>
            <thead>
              <th>Resource</th>
              <th>Error Code</th>
              <th>Message</th>
            </thead>
            <tbody>
            <tr>
              <td>User</td>
              <td>BE1001</td>
              <td>Username is required</td>
            </tr>
            <tr>
              <td>User</td>
              <td>BE1002</td>
              <td>Email is required</td>
            </tr>
            <tr>
              <td>User</td>
              <td>BE1003</td>
              <td>Invalid Email</td>
            </tr>
            <tr>
              <td>User</td>
              <td>BE1004</td>
              <td>Duplicate User</td>
            </tr>
            </tbody>
          </table>
      servers:
        - url: http://127.0.0.1:8080/
      paths:
        /api/user/{username}:
          description: >-
            End point to read, update and delete a user resource with username.
          get:
            description: Operation to get a user details
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: ali
            responses:
              '200':
                description: Success
                content:
                  application/json:
                    schema:
                      title: user object
                      type: object
                      properties:
                        user_id:
                          type: integer
                          example: 201
                        username:
                          type: string
                          example: ali
                        email:
                          type: string
                          example: ali@example.com
              '400':
                description: Bad request.
              '404':
                description: Resource not found.
              '500':
                description: Internal Server Error.
          put:
            description: Operation to update the user detail
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: ali
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      email:
                        type: string
                        example: ali@example2.org
            responses:
              '200':
                description: Successfuly updated.
                content:
                  application/json:
                    schema:
                      title: user object
                      type: object
                      properties:
                        user_id:
                          type: integer
                          example: 201
                        username:
                          type: string
                          example: ali
                        email:
                          type: string
                          example: ali@example2.com
              '400':
                description: Bad request.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '404':
                description: Resource you requested to update not found
              '500':
                description: Internal Server Error
          delete:
            description: Operation to delete the user.
            parameters:
              - in: path
                name: username
                required: true
                schema:
                  type: string
                  example: raj
            responses:
              '200':
                description: Successfully Deleted.
              '400':
                description: Bad request.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '404':
                description: User does not exist.
              '500':
                description: Intenal Server Error.
        /api/user:
          description: End point to create a user.
          post:
            description: Operation to create the user
            requestBody:
              content:
                application/json:
                  schema:
                    title: user object
                    type: object
                    properties:
                      username:
                        type: string
                        example: ali
                      email:
                        type: string
                        example: ali@example.com
            responses:
              '201':
                description: Successfully Created.
              '400':
                description: Bad request.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '409':
                description: username already exist.
              '500':
                description: Internal Server Error.
    contentType: yaml
    _type: api_spec
  - _id: env_env_105012b1df36837a22c6dc51616df3cca961267a_sub
    parentId: env_105012b1df36837a22c6dc51616df3cca961267a
    modified: 1636428824044
    created: 1636428824044
    name: OpenAPI env
    data:
      scheme: http
      base_path: ""
      host: 127.0.0.1:5000
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1636428824044
    _type: environment
  - _id: env_1bfecbe5417e0692dcef829b5c47b3bb6c24638b
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1636546623565
    created: 1636546623565
    name: Base Environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1636546623565
    _type: environment
  - _id: jar_1bfecbe5417e0692dcef829b5c47b3bb6c24638b
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1636546623569
    created: 1636546623569
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_8042869c332b4f59a330676a3e92c84a
    parentId: wrk_e51a6b4e165c4342aa083be39375598e
    modified: 1648487991808
    created: 1636546623558
    fileName: Week_6lab.yaml
    contents: >-
      openapi: 3.0.0

      info:
        title: Week Six Assignment Problem Statement
        description: >
          <div>In this assignment, you have to create a RESTful API, database models using Flask-RESTful  and     flask-SQLAlchemy. We list below instructions to be followed in 
          preparing and submitting the solution.
          <h3>General instructions:</h3>
          <ol> 
            <li> Submit a single .zip file containing all your submission files and folders, the name of which should be "roll_number.zip". E.g.: 21f1000000.zip </li>
            <li>The folder structure inside the zip file should be as follows:</li>
            <ol type = "I">
              <li>The Python program must be written inside a file named "app.py". This file must reside inside the root folder.</li>
              <li> The database file named "api_database.sqlite3". You are not required to submit this database file with your submission.</li>
            </ol>
          <li> You should not keep any code inside the scope of the condition " if __name__ == '__main__' " except run() call. </li>
          <li> Allowed Python packages: flask, flask-sqlalchemy, flask-restful, and any standard Python3 package.</li>
          <li> The database URI must be the same as: app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///api_database.sqlite3'.</li>
          <li> You should not use create_all() call in your program to create a database.</li>
          </ol>
          </div>

          <h3> Course Table Schema </h3> 
          <table>
            <thead>
              <th>Column Name</th>
              <th>Column Type</th>
              <th>Constraints</th>
            </thead>
            <tbody>
            <tr>
              <td>course_id</td>
              <td>Integer</td>
              <td>Primary Key, Auto Increment</td>
            </tr>
            <tr>
              <td>course_name</td>
              <td>String</td>
              <td>Not Null</td>
            </tr>
            <tr>
              <td>course_code</td>
              <td>String</td>
              <td>Unique, Not Null</td>
            </tr>      
            <tr>
              <td>course_description</td>
              <td>String</td>
              <td></td>
            </tr>         
          </tbody>
          </table>

          <h3> Student Table Schema </h3> 
          <table>
            <thead>
              <th>Column Name</th>
              <th>Column Type</th>
              <th>Constraints</th>
            </thead>
            <tbody>
            <tr>
              <td>student_id</td>
              <td>Integer</td>
              <td>Primary Key, Auto Increment</td>
            </tr>
            <tr>
              <td>roll_number</td>
              <td>String</td>
              <td>Unique, Not Null</td>
            </tr>
            <tr>
              <td>first_name</td>
              <td>String</td>
              <td>Not Null</td>
            </tr>      
            <tr>
              <td>last_name</td>
              <td>String</td>
              <td></td>
            </tr>         
          </tbody>
          </table>


          <h3> Enrollment Table Schema </h3> 
          <table>
            <thead>
              <th>Column Name</th>
              <th>Column Type</th>
              <th>Constraints</th>
            </thead>
            <tbody>
            <tr>
              <td>enrollment_id</td>
              <td>Integer</td>
              <td>Primary Key, Auto Increment</td>
            </tr>
            <tr>
              <td>student_id</td>
              <td>Integer</td>
              <td>Foreign Key (student.student_id), Not Null</td>
            </tr>
            <tr>
              <td>course_id</td>
              <td>Integer</td>
              <td>Foreign Key (course.course_id), Not Null</td>
          </tbody>
          </table>

          <h3> Error Codes </h3> 
          <table>
            <thead>
              <th>Resource</th>
              <th>Error Code</th>
              <th>Message</th>
            </thead>
            <tbody>
            <tr>
              <td>Course</td>
              <td>COURSE001</td>
              <td>Course Name is required and should be string.</td>
            </tr>
            <tr>
              <td>Course</td>
              <td>COURSE002</td>
              <td>Course Code is required and should be string.</td>
            </tr>
            <tr>
              <td>Course</td>
              <td>COURSE003</td>
              <td> Course Description should be string.</td>
            </tr>
            <tr>
              <td>Student</td>
              <td>STUDENT001</td>
              <td>Roll Number required and should be String </td>
            </tr>
            <tr>
              <td>Student</td>
              <td>STUDENT002</td>
              <td>First Name is required and should be String </td>
            </tr>
            <tr>
              <td>Student</td>
              <td>STUDENT003</td>
              <td>Last Name is String </td>
            </tr>
            <tr>
              <td>Enrollment</td>
              <td>ENROLLMENT001</td>
              <td>Course does not exist</td>
            </tr>
            <tr>
              <td>Enrollment</td>
              <td>ENROLLMENT002</td>
              <td>Student does not exist.</td>
            </tr>  
            <tr>
              <td>Enrollment</td>
              <td>ENROLLMENT003</td>
              <td>Course Code is required and should be string.</td>
            </tr> 
          </tbody>
          </table>

        version: 1.0.0
      servers:
        - url: http://127.0.0.1:5000/
      paths:
        /api/course/{course_id}:
          description: End point to read, update and delete a course resource with course_id = courseId.
          get:
            description: Operation to Read course resource.
            parameters:
              - in: path
                name: course_id
                required: true
                schema:
                  type: integer
                  example: 201
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      title: course object
                      type: object
                      properties:
                        course_id:
                          type: integer
                          example: 201
                        course_name:
                          type: string
                          example: Maths1
                        course_code:
                          type: string
                          example: MA101
                        course_description:
                          type: string
                          example: Course Description Example
              '500':
                description: Internal Server Error
              '404':
                description: Course not found

          put:
            description: Operation to update the course resource.
            parameters:
              - in: path
                name: course_id
                required: true
                schema:
                  type: integer
                  example: 201
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      course_name:
                        type: string
                        example: Maths1
                      course_code:
                        type: string
                        example: MA101
                      course_description:
                        type: string
                        example: Course Description Example
            responses:
              '200':
                description: Successfuly updated
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        course_id:
                          type: integer
                          example: 201
                        course_name:
                          type: string
                          example: Maths1
                        course_code:
                          type: string
                          example: MA101
                        course_description:
                          type: string
                          example: Course Description Example
              '404':
                description: Course not found
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
          delete:
            description: Operation to delete the course resource
            parameters:
              - in: path
                name: course_id
                required: true
                schema:
                  type: integer
                  example: 201
            responses:
              '200':
                description: Successfully Deleted
              '404':
                description: Course not found
              '500':
                description: Intenal Server Error

        /api/course:
          description: End point to create course resource
          post:
            description: Operation to create the course resource
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      course_name:
                        type: string
                        example: Maths1
                      course_code:
                        type: string
                        example: MA101
                      course_description:
                        type: string
                        example: Course Description Example
            responses:
              '201':
                description: Successfully Created
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        course_id:
                          type: integer
                          example: 201
                        course_name:
                          type: string
                          example: Maths1
                        course_code:
                          type: string
                          example: MA101
                        course_description:
                          type: string
                          example: Course Description Example
              '409':
                description: course_code already exist
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
        /api/student/{student_id}:
          description: Url to read, update and delete the student resource.
          get:
            description: Operation to read student resource
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 201
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      title: student object
                      type: object
                      properties:
                        student_id:
                          type: integer
                          example: 101
                        first_name:
                          type: string
                          example: Narendra
                        last_name:
                          type: string
                          example: Mishra
                        roll_number:
                          type: string
                          example: MA19M010
              '500':
                description: Internal server error
              '404':
                description: Student not found

          put:
            description: Operation to update the student resource
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 101
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: Narendra
                      last_name:
                        type: string
                        example: Mishra
                      roll_number:
                        type: string
                        example: MA19M010
            responses:
              '200':
                description: Successfully updated
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        student_id:
                          type: integer
                          example: 101
                        first_name:
                          type: string
                          example: Narendra
                        last_name:
                          type: string
                          example: Mishra
                        roll_number:
                          type: string
                          example: MA19M010
              '404':
                description: Student not found
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
          delete:
            description: Operation to delete the course resource
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Successfully Deleted
              '500':
                description: Internal Server Error
              '404':
                description: Student not found

        /api/student:
          description: Url to create student resource
          post:
            description: Operation to create the student resource
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: Narendra
                      last_name:
                        type: string
                        example: Mishra
                      roll_number:
                        type: string
                        example: MA19M010
            responses:
              '201':
                description: Successfully Created
                content:
                  application/json:
                    schema:
                      title: student object
                      type: object
                      properties:
                        student_id:
                          type: integer
                          example: 101
                        first_name:
                          type: string
                          example: Narendra
                        last_name:
                          type: string
                          example: Mishra
                        roll_number:
                          type: string
                          example: MA19M010
              '409':
                description: Student already exist
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string

        /api/student/{student_id}/course:
          description: Url to get the the list of enrollments a student with student_id is enrolled in.
          get:
            description: URL to get the list of enrollments, the student is enrolled in. This path belongs to the Enrollment table.
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        properties:
                          enrollment_id:
                            type: integer
                            example: 10
                          student_id:
                            type: integer
                            example: 101
                          course_id:
                            type: integer
                            example: 201
              '400':
                description: Invalid Student Id
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '404':
                description: Student is not enrolled in any course
              '500':
                description: Internal Server Error

          post:
            description: Add student enrollment aka enroll the student to the course. This path belongs to the Enrollment table.
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 101
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      course_id:
                        type: integer
                        example: 12345
            responses:
              '201':
                description: Enrollment successful
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        properties:
                          enrollment_id:
                            type: integer
                            example: 10
                          student_id:
                            type: integer
                            example: 101
                          course_id:
                            type: integer
                            example: 201
              '404':
                description: Student not found
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string

        /api/student/{student_id}/course/{course_id}:
          description: URL to delete enrollment of a student in a course. This path belongs to the Enrollment table.
          delete:
            description: URL to delete enrollment of the student in the course. This path belongs to the Enrollment table.
            parameters:
              - in: path
                name: student_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: course_id
                required: true
                schema:
                  type: integer
                  example: 10
            responses:
              '200':
                description: Successfully deleted
              '400':
                description: Invalid Student Id or Course Id.
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '404':
                description: Enrollment for the student not found
              '500':
                description: Internal Server Error
    contentType: yaml
    _type: api_spec
  - _id: env_env_1bfecbe5417e0692dcef829b5c47b3bb6c24638b_sub
    parentId: env_1bfecbe5417e0692dcef829b5c47b3bb6c24638b
    modified: 1648006678329
    created: 1648006678329
    name: OpenAPI env
    data:
      scheme: http
      base_path: ""
      host: 127.0.0.1:5000
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1648006678329
    _type: environment
